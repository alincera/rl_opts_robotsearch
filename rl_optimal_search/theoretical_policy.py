# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/theoretical_policy.ipynb.

# %% auto 0
__all__ = ['prob_L', 'get_ps']

# %% ../nbs/theoretical_policy.ipynb 2
import numpy as np
from tqdm.auto import tqdm
from scipy.special import zeta

# %% ../nbs/theoretical_policy.ipynb 5
def prob_L(L, Ps):
    '''
    :L (scalar): number of steps
    :Ps (array): probability of staying, at each L
    '''    
    return (1-Ps[L])*np.prod(Ps[:L])

# %% ../nbs/theoretical_policy.ipynb 13
from scipy.special import zeta

def get_ps(L, alpha, ps_0 = 1):
    
    ps = np.zeros(L)
    ps[0] = ps_0    
    
    for l in range(2, L+1):
                
        # product
        prod = np.prod(ps[:l-1])
        # P(L-1)
        p_lm1 = (1/zeta(alpha+1, q = 1))*(l-1)**(-alpha-1)
        # all together
        ps[l-1] = 1-p_lm1/prod
        
    return ps
