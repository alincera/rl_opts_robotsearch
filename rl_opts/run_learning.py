# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/py_runs/run_learning.ipynb.

# %% auto 0
__all__ = ['args', 'experiment', 'run', 'num_config', 'results_path', 'config', 'get_args']

# %% ../nbs/py_runs/run_learning.ipynb 3
from .utils import get_config
from .learn_and_bench import learning

# %% ../nbs/py_runs/run_learning.ipynb 4
def get_args(argv):
    """
    Passes the arguments from the runfile to the main file or passes the default values to the main file.
    Returns a namespace object that makes each element callable by args.name.
    Args:
        argv  (list) list of arguments that are passed through with a --name

    Returns:
        args  (namespace) namespace of all arguments passed through
    """
    parser = argparse.ArgumentParser()
    parser.add_argument('--experiment', type=str, default='learning', help='type of experiment')        
    parser.add_argument('--run', type=int, default=0, help='run id')
    parser.add_argument('--num_config', type=int, default=1, help='number of the configuration file')
    args = parser.parse_args(argv)
    return args

# %% ../nbs/py_runs/run_learning.ipynb 5
args = get_args(argv[1:])
experiment = args.experiment
run = args.run
num_config = args.num_config

# %% ../nbs/py_runs/run_learning.ipynb 6
# path of the results folder
results_path = 'results/'+experiment+'/'+'exp_'+str(num_config)+'/'
pathlib.Path(results_path).mkdir(parents=True, exist_ok=True)
print('\nResults saved in: ', results_path)

# %% ../nbs/py_runs/run_learning.ipynb 7
# load the configuration file
config = get_config('exp_'+str(num_config)+'.cfg', experiment)
print('\nExperiment: ', experiment, ' Configuration: ', 'exp_'+str(num_config))

# %% ../nbs/py_runs/run_learning.ipynb 8
learning(config, results_path, run)

