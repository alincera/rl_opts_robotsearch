# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/rl_opts/',
                'doc_host': 'https://gorkamunoz.github.io',
                'git_url': 'https://github.com/gorkamunoz/rl_opts/tree/master/',
                'lib_path': 'rl_opts'},
  'syms': { 'rl_opts.analytics': { 'rl_opts.analytics.get_policy': ('analytics.html#get_policy', 'rl_opts/analytics.py'),
                                   'rl_opts.analytics.pdf_discrete_sample': ('analytics.html#pdf_discrete_sample', 'rl_opts/analytics.py'),
                                   'rl_opts.analytics.pdf_multimode': ('analytics.html#pdf_multimode', 'rl_opts/analytics.py'),
                                   'rl_opts.analytics.pdf_powerlaw': ('analytics.html#pdf_powerlaw', 'rl_opts/analytics.py')},
            'rl_opts.imitation': { 'rl_opts.imitation.PS_imitation': ('imitation_learning.html#ps_imitation', 'rl_opts/imitation.py'),
                                   'rl_opts.imitation.PS_imitation.__init__': ( 'imitation_learning.html#ps_imitation.__init__',
                                                                                'rl_opts/imitation.py'),
                                   'rl_opts.imitation.PS_imitation.reset': ( 'imitation_learning.html#ps_imitation.reset',
                                                                             'rl_opts/imitation.py'),
                                   'rl_opts.imitation.PS_imitation.update': ( 'imitation_learning.html#ps_imitation.update',
                                                                              'rl_opts/imitation.py')},
            'rl_opts.mfpt': { 'rl_opts.mfpt.Biexp': ('mfpt.html#biexp', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.Biexp.__init__': ('mfpt.html#biexp.__init__', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.Biexp.cdf': ('mfpt.html#biexp.cdf', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.Biexp.dpdf': ('mfpt.html#biexp.dpdf', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.Biexp.pdf': ('mfpt.html#biexp.pdf', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.Biexp.sample': ('mfpt.html#biexp.sample', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.biexp_time_generator': ('mfpt.html#biexp_time_generator', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.constant_velocity_generator': ('mfpt.html#constant_velocity_generator', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.constant_velocity_generator_2D': ( 'mfpt.html#constant_velocity_generator_2d',
                                                                               'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.exp_time_generator': ('mfpt.html#exp_time_generator', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.mfpt_informed_rw': ('mfpt.html#mfpt_informed_rw', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.mfpt_informed_rw_2D': ('mfpt.html#mfpt_informed_rw_2d', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.mfpt_rw': ('mfpt.html#mfpt_rw', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.mfpt_rw_2D': ('mfpt.html#mfpt_rw_2d', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.rw_generator': ('mfpt.html#rw_generator', 'rl_opts/mfpt.py')},
            'rl_opts.theory': { 'rl_opts.theory.discrete_composite_sample': ( 'theoretical_policy-copy1.html#discrete_composite_sample',
                                                                              'rl_opts/theory.py'),
                                'rl_opts.theory.discrete_pw_sample': ( 'theoretical_policy-copy1.html#discrete_pw_sample',
                                                                       'rl_opts/theory.py'),
                                'rl_opts.theory.get_ps': ('theoretical_policy-copy1.html#get_ps', 'rl_opts/theory.py'),
                                'rl_opts.theory.get_ps_composite': ('theoretical_policy-copy1.html#get_ps_composite', 'rl_opts/theory.py'),
                                'rl_opts.theory.get_ps_composite_cutoff': ( 'theoretical_policy-copy1.html#get_ps_composite_cutoff',
                                                                            'rl_opts/theory.py'),
                                'rl_opts.theory.prob_L': ('theoretical_policy-copy1.html#prob_l', 'rl_opts/theory.py'),
                                'rl_opts.theory.prob_L_composite': ('theoretical_policy-copy1.html#prob_l_composite', 'rl_opts/theory.py'),
                                'rl_opts.theory.prob_L_composite_cutoff': ( 'theoretical_policy-copy1.html#prob_l_composite_cutoff',
                                                                            'rl_opts/theory.py'),
                                'rl_opts.theory.ps_exp_cutoff': ('theoretical_policy-copy1.html#ps_exp_cutoff', 'rl_opts/theory.py'),
                                'rl_opts.theory.pw_exp': ('theoretical_policy-copy1.html#pw_exp', 'rl_opts/theory.py'),
                                'rl_opts.theory.simul_2actions': ('theoretical_policy-copy1.html#simul_2actions', 'rl_opts/theory.py'),
                                'rl_opts.theory.simul_2actions.__init__': ( 'theoretical_policy-copy1.html#simul_2actions.__init__',
                                                                            'rl_opts/theory.py'),
                                'rl_opts.theory.simul_2actions.reset': ( 'theoretical_policy-copy1.html#simul_2actions.reset',
                                                                         'rl_opts/theory.py'),
                                'rl_opts.theory.simul_2actions.reward': ( 'theoretical_policy-copy1.html#simul_2actions.reward',
                                                                          'rl_opts/theory.py'),
                                'rl_opts.theory.simul_ps': ('theoretical_policy-copy1.html#simul_ps', 'rl_opts/theory.py'),
                                'rl_opts.theory.simul_ps.__init__': ( 'theoretical_policy-copy1.html#simul_ps.__init__',
                                                                      'rl_opts/theory.py'),
                                'rl_opts.theory.simul_ps.reward': ('theoretical_policy-copy1.html#simul_ps.reward', 'rl_opts/theory.py'),
                                'rl_opts.theory.walk_from_policy': ('theoretical_policy-copy1.html#walk_from_policy', 'rl_opts/theory.py')},
            'rl_opts.utils': {'rl_opts.utils.add_colorbar': ('utils.html#add_colorbar', 'rl_opts/utils.py')}}}
