# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/py_runs/run_statistics_postlearning.ipynb.

# %% auto 0
__all__ = ['args', 'experiment_name', 'num_config', 'run', 'num_walks', 'episode_interval', 'get_args']

# %% ../nbs/py_runs/run_statistics_postlearning.ipynb 2
from sys import argv
import argparse
import numpy as np


# %% ../nbs/py_runs/run_statistics_postlearning.ipynb 3
from .agent_eff_evolution import agent_efficiency

# %% ../nbs/py_runs/run_statistics_postlearning.ipynb 4
def get_args(argv):
    """
    Passes the arguments from the runfile to the main file or passes the default values to the main file.
    Returns a namespace object that makes each element callable by args.name.
    Args:
        argv  (list) list of arguments that are passed through with a --name

    Returns:
        args  (namespace) namespace of all arguments passed through
    """
    parser = argparse.ArgumentParser()
    parser.add_argument('--experiment', type=str, default='learning', help='type of experiment')        
    parser.add_argument('--run', type=int, default=0, help='agent id')
    parser.add_argument('--num_config', type=int, default=1, help='number of the configuration file')
    parser.add_argument('--num_walks', type=int, default=10000, help='number of walks run in parallel')
    parser.add_argument('--episode_interval', type=int, default=2000, help='every episode_interval episodes, the policy of the agent is taken to run this postlearning analysis')
    args = parser.parse_args(argv)
    return args


# %% ../nbs/py_runs/run_statistics_postlearning.ipynb 5
# get the parsed arguments
args = get_args(argv[1:])
experiment_name = args.experiment
num_config = args.num_config
run = args.run
num_walks = args.num_walks
episode_interval = args.episode_interval

# %% ../nbs/py_runs/run_statistics_postlearning.ipynb 6
agent_efficiency(experiment_name, num_config, run, num_walks, episode_interval)
